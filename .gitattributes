from turtle import *
from freegames import vector
#Dibuja una línea de punto a punto
def line(start, end):
    "Draw line from start to end."
    up()
    goto(start.x, start.y)
    down()
    goto(end.x, end.y)
#Dibuja un cuadrado 
def square(start, end):
    "Draw square from start to end."
    up()
    goto(start.x, start.y)
    down()
    begin_fill()

    for count in range(4):
        forward(end.x - start.x)
        left(90)

    end_fill()
#Dibuja un círculo 
def circles(start, end):
    "Draw circle from start to end."
    radius = math.sqrt((end.x - start.x)**2 + (end.y - start.y)**2)
    up() #subo la pluma
    goto(start.x, start.y - radius)
    down() #bajo la pluma
    begin_fill() #Relleno 
    circle(radius)
    
    end_fill()

def rectangle(start, end):
    "Draw rectangle from start to end."
    up()
    goto(start.x, start.y)
    down()
    begin_fill()
    goto(end.x, start.y)
    left(90)
    goto(end.x, end.y)
    left(90)
    goto(start.x, end.y)
    left(90)
    goto(start.x, start.y)
    left(90)
    end_fill()
#Dibuja un triángulo
def triangle(start, end):
    "Draw triangle from start to end."
    up()
    goto(start.x, start.y)
    down()
    begin_fill()
    goto(end.x, start.y)
    left(120)
    forward(end.x - start.x)
    left(120)
    forward(end.x - start.x)
    left(120)
    end_fill()

#Define donde iniciara a dibujar al dar un click 
def tap(x, y):
    "Store starting point or draw shape."
    start = state['start']

    if start is None:
        state['start'] = vector(x, y)
    else:
        shape = state['shape']
        end = vector(x, y)
        shape(start, end)
        state['start'] = None

def store(key, value):
    "Store value in state at key."
    state[key] = value
#establece la posición inicial como ninguna y la forma predeterminada como línea
state = {'start': None, 'shape': line}
setup(420, 420, 370, 0)
onscreenclick(tap)
#listen toma los inputs del teclado
listen()
#segun el input anterior ejecuta una de las funciones anteriores 
onkey(undo, 'u')
onkey(lambda: color('black'), 'K')
onkey(lambda: color('white'), 'W')
onkey(lambda: color('green'), 'G')
onkey(lambda: color('blue'), 'B')
onkey(lambda: color('red'), 'R')
onkey(lambda: color('purple'), 'P') #color nuevo 
onkey(lambda: store('shape', line), 'l')
onkey(lambda: store('shape', square), 's')
onkey(lambda: store('shape', circles), 'c')
onkey(lambda: store('shape', rectangle), 'r')
onkey(lambda: store('shape', triangle), 't')
done()